[tool.poetry]
name = "analytics-data-engg-play"
version = "0.1.0"
description = "Analytics & Data Engineering Playground"
authors = ["Kenneth V. Domingo <hello@kvd.studio>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
dagster = "^1.8.7"
dagster-webserver = "^1.8.7"
dbt-core = "^1.8.6"
dagster-dbt = "^0.24.7"
polars = "^1.7.1"
dagster-polars = "^0.24.7"
pyarrow = "^17.0.0"
pydantic = "^2.9.1"
pydantic-settings = "^2.5.2"
dagster-postgres = "^0.24.7"
duckdb = "^1.1.0"
dagster-duckdb-polars = "^0.24.7"
dbt-duckdb = "^1.8.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.5"
ipython = "^8.27.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.dagster]
module_name = "src.definitions"

[tool.ruff]
target-version = "py312"
ignore-init-module-imports = true

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "UP"]
ignore = ["E203", "E266", "E501", "E402"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator"]
