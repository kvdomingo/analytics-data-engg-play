name: ae-de-play

volumes:
  db-data:
  dagster-data:
  venv-data:
  superset-home-data:
  superset-db-data:
  superset-redis-data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.1.0/26
          gateway: 172.20.1.1

x-common-env: &common_env
  PYTHON_ENV: development
  DAGSTER_HOME: /app
  DBT_TARGET_PATH: /app/src/target
  NASA_FIRMS_MAP_KEY: ${NASA_FIRMS_MAP_KEY}
  MINIO_BUCKET: ${MINIO_BUCKET}
  MINIO_ENDPOINT: ${MINIO_ENDPOINT}
  MINIO_REGION: ${MINIO_REGION}
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  GCS_BUCKET: ${GCS_BUCKET}
  GCS_APPLICATION_CREDENTIALS: /home/dagster/.config/gcloud
  DATA_DB_USERNAME: postgres
  DATA_DB_PASSWORD: password
  DATA_DB_DATABASE: postgres
  DATA_DB_HOST: postgres
  DATA_DB_PORT: 5432

services:
  dagster:
    build: .
    image: kvdomingo/ae-de-play
    restart: unless-stopped
    command:
      - >
        uv sync --frozen;
        exec uv run dagster dev -h 0.0.0.0 -p 3030;
    init: true
    environment: *common_env
    volumes:
      - .:/app
      - ${HOME}/.config/gcloud:/home/dagster/.config/gcloud:ro
      - venv-data:/app/.venv
    ports:
      - "3030:3030"
    depends_on:
      dagster-db:
        condition: service_healthy

  jupyter:
    build: .
    image: kvdomingo/ae-de-play
    restart: unless-stopped
    command:
      - exec /app/.venv/bin/jupyter lab --no-browser --autoreload --ip 0.0.0.0
    environment:
      <<: *common_env
      JUPYTER_PORT: 8888
    volumes:
      - .:/app
      - venv-data:/app/.venv
    ports:
      - "8888:8888"
    depends_on:
      dagster:
        condition: service_started

  dagster-db:
    image: bitnami/postgresql:16.4.0-debian-12-r8
    restart: unless-stopped
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: dagster
    volumes:
      - dagster-data:/bitnami/postgresql
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "dagster" ]
      start_period: 5s
      interval: 20s
      retries: 3
      timeout: 2s

  superset-db:
    image: bitnami/postgresql:16.4.0-debian-12-r8
    restart: unless-stopped
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: superset
    volumes:
      - superset-db-data:/bitnami/postgresql
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "superset" ]
      start_period: 5s
      interval: 20s
      retries: 3
      timeout: 2s

  superset:
    build:
      context: .
      dockerfile: superset.Dockerfile
    image: kvdomingo/ae-de-play-superset
    restart: unless-stopped
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_CONFIG_PATH: /opt/superset_config.py
    volumes:
      - ./data:/opt/data
      - ./superset_config.py:/opt/superset_config.py
    ports:
      - "8088:8088"
    depends_on:
      superset-db:
        condition: service_healthy

  db:
    build:
      context: .
      dockerfile: pg.Dockerfile
    image: kvdomingo/ae-de-play-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  evidence:
    image: node:lts-bookworm
    restart: unless-stopped
    init: true
    entrypoint:
      - /bin/sh
      - -eu
      - -c
    command:
      - npm install && exec npm run dev
    working_dir: /app/evidence
    volumes:
      - ./evidence:/app/evidence
      - ./data:/app/data
    ports:
      - '3000:3000'
